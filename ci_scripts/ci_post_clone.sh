#!/bin/bash

# Xcode Cloud Post-Clone Script
# Konfiguriert das Runner-Release Schema f√ºr TestFlight Builds

set -e

echo "üîß Configuring Xcode Cloud for Runner-Release schema..."

# Zum Projekt-Root wechseln
cd /Volumes/workspace/repository
echo "üìç Working directory: $(pwd)"

# √úberpr√ºfen verf√ºgbare Befehle
echo "üîç Checking available commands..."
which flutter || echo "‚ö†Ô∏è flutter not found in PATH"
which pod || echo "‚ö†Ô∏è pod not found in PATH"

# PATH erweitern falls n√∂tig
export PATH="/usr/local/bin:/opt/homebrew/bin:$PATH"
echo "üìç Updated PATH: $PATH"

# √úberpr√ºfen ob wir im richtigen Verzeichnis sind
if [ ! -f "pubspec.yaml" ]; then
    echo "‚ùå Error: pubspec.yaml not found. Current directory: $(pwd)"
    ls -la
    exit 1
fi

echo "‚úÖ Found pubspec.yaml - we're in the Flutter project"

# Flutter Setup
echo "üì¶ Installing Flutter dependencies..."
if command -v flutter >/dev/null 2>&1; then
    flutter pub get
else
    echo "‚ùå Error: flutter command not available"
    exit 1
fi

# iOS Setup
echo "üçé Installing iOS dependencies..."
cd ios
if [ ! -f "Podfile" ]; then
    echo "‚ùå Error: Podfile not found in ios directory"
    exit 1
fi

if command -v pod >/dev/null 2>&1; then
    pod install
else
    echo "‚ùå Error: pod command not available"
    exit 1
fi
cd ..

# Verify Runner-Release schema exists
echo "üîç Verifying Runner-Release schema..."
if [ -f "ios/Runner.xcodeproj/xcshareddata/xcschemes/Runner-Release.xcscheme" ]; then
    echo "‚úÖ Runner-Release schema found"
else
    echo "‚ùå Runner-Release schema not found!"
    echo "Available schemas:"
    ls -la ios/Runner.xcodeproj/xcshareddata/xcschemes/
    exit 1
fi

# Set environment variable for Xcode Cloud to use Runner-Release
export XCODE_CLOUD_SCHEME="Runner-Release"
export XCODE_CLOUD_CONFIGURATION="Release"

echo "‚úÖ Xcode Cloud configured for Runner-Release schema!" 