#!/bin/bash

# CI Script f√ºr Xcode Cloud mit Runner-Release Schema
set -e

echo "üîß Setting up Xcode Cloud build with Runner-Release schema..."

# Zum Projekt-Root wechseln
cd /Volumes/workspace/repository
echo "üìç Working directory: $(pwd)"

# √úberpr√ºfen verf√ºgbare Befehle
echo "üîç Checking available commands..."
which flutter || echo "‚ö†Ô∏è flutter not found in PATH"
which pod || echo "‚ö†Ô∏è pod not found in PATH"
which xcodebuild || echo "‚ö†Ô∏è xcodebuild not found in PATH"

# PATH erweitern falls n√∂tig
export PATH="/usr/local/bin:/opt/homebrew/bin:$PATH"
echo "üìç Updated PATH: $PATH"

# √úberpr√ºfen ob wir im richtigen Verzeichnis sind
if [ ! -f "pubspec.yaml" ]; then
    echo "‚ùå Error: pubspec.yaml not found. Current directory: $(pwd)"
    ls -la
    exit 1
fi

echo "‚úÖ Found pubspec.yaml - we're in the Flutter project"

# Flutter Setup
echo "üì¶ Installing Flutter dependencies..."
if command -v flutter >/dev/null 2>&1; then
    flutter pub get
else
    echo "‚ùå Error: flutter command not available"
    exit 1
fi

# Pods installieren
echo "üçé Installing CocoaPods dependencies..."
cd ios
if [ ! -f "Podfile" ]; then
    echo "‚ùå Error: Podfile not found in ios directory"
    exit 1
fi

if command -v pod >/dev/null 2>&1; then
    pod install
else
    echo "‚ùå Error: pod command not available"
    exit 1
fi
cd ..

# Flutter Build mit Release-Konfiguration
echo "üì± Building Flutter app with release configuration..."
flutter build ios --release --no-codesign

# Xcode Build mit Runner-Release Schema
echo "üèóÔ∏è Building with Runner-Release schema..."
cd ios
if [ ! -f "Runner.xcworkspace" ]; then
    echo "‚ùå Error: Runner.xcworkspace not found"
    exit 1
fi

if command -v xcodebuild >/dev/null 2>&1; then
    xcodebuild -workspace Runner.xcworkspace -scheme Runner-Release -configuration Release archive -archivePath build/Runner.xcarchive
else
    echo "‚ùå Error: xcodebuild command not available"
    exit 1
fi

echo "‚úÖ Build completed successfully with Runner-Release schema!"